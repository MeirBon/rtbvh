name: Rust

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        working-directory: ./
        run: cargo test --verbose
      - name: Build FFI
        working-directory: ./rtbvh_ffi
        run: cargo build --verbose
      - name: Run tests FFI
        working-directory: ./rtbvh_ffi
        run: cargo test --verbose
      - uses: actions/upload-artifact@v2
        with:
          name: rtbvh-ffi headers
          path: |
            ./rtbvh_ffi/target/rtbvh.h
            ./rtbvh_ffi/target/rtbvh.hpp

  build-ffi-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - run: cargo build --manifest-path ./rtbvh_ffi/Cargo.toml --release --verbose
      - uses: actions/upload-artifact@v2
        with:
          name: rtbvh-ffi-windows-library
          path: |
            ./rtbvh_ffi/target/release/rtbvh_rs.lib
            ./rtbvh_ffi/target/release/rtbvh_rsdll.lib
            ./rtbvh_ffi/target/release/rtbvh_rsdll.dll

  build-ffi-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: cargo build --manifest-path ./rtbvh_ffi/Cargo.toml --release --verbose
      - uses: actions/upload-artifact@v2
        with:
          name: rtbvh-ffi-linux-ubuntu-library
          path: |
            ./rtbvh_ffi/target/release/librtbvh_rs.a
            ./rtbvh_ffi/target/release/librtbvh_rs.so

  build-ffi-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - run: cargo build --manifest-path ./rtbvh_ffi/Cargo.toml --release --verbose
      - uses: actions/upload-artifact@v2
        with:
          name: rtbvh-ffi-macos-library
          path: |
            ./rtbvh_ffi/target/release/librtbvh_rs.a
            ./rtbvh_ffi/target/release/librtbvh_rs.dylib
